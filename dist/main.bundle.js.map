{"version":3,"sources":["/home/osmo/SOFTA-TEST/angular-firestore-crud/src/$_lazy_route_resource lazy","/home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.component.css","/home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.component.html","/home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.component.ts","/home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.module.ts","/home/osmo/SOFTA-TEST/angular-firestore-crud/src/environments/environment.ts","/home/osmo/SOFTA-TEST/angular-firestore-crud/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1>Users</h1>\\n\\n<!-- <p>Name:\\n    <input type=\\\"text\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" [(ngModel)]=\\\"addUser.name\\\">\\n</p> -->\\n\\n<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr style=\\\"background-color: rgb(194, 187, 187);\\\">\\n      <th>Name</th>\\n      <th>Email ID</th>\\n      <th>Contact Number</th>\\n      <th>Action</th>\\n    </tr>\\n    <tr>\\n      <td>\\n        <!-- <p>Name:\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"item\\\" placeholder=\\\"Name\\\"\\n        name=\\\"name\\\"\\n        [(ngModel)]=\\\"addUser.name\\\">\\n      </p> -->\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addUser.name\\\" placeholder=\\\"Name\\\">\\n      </td>\\n      <td>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addUser.email_id\\\" placeholder=\\\"Email Id\\\">\\n      </td>\\n      <td>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addUser.contact_number\\\" placeholder=\\\"Contact Number\\\">\\n      </td>\\n      <td>\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"insert()\\\">Insert</button>\\n      </td>\\n    </tr>\\n  </thead>\\n\\n  <tbody *ngFor=\\\"let item of user | async\\\">\\n    <tr>\\n      <td>\\n        {{item.name}}\\n        <!-- {{item.name | json}} -->\\n      </td>\\n      <td>\\n        {{item.email_id}}\\n      </td>\\n      <td>\\n        {{item.contact_number}}\\n      </td>\\n      <td>\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(item)\\\">\\n          <span class=\\\"glyphicon glyphicon-trash\\\">Delete</span>\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"edit(item)\\\">\\n          <span class=\\\"glyphicon glyphicon-pen\\\">Update</span>\\n        </button>\\n      </td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"editState && itemToUpdate.id == item.id\\\">\\n      <td colspan=5>\\n        <div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"itemToUpdate.name\\\" placeholder=\\\"Name\\\">\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"itemToUpdate.email_id\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"itemToUpdate.contact_number\\\" placeholder=\\\"Contact\\\">\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"itemToUpdate.image\\\" placeholder=\\\"Image\\\">\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"itemToUpdate.id\\\" placeholder=\\\"Id\\\">\\n            </div>\\n          </div>\\n          <p></p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\" style=\\\"text-align:left;\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">Update</button>\\n              <button class=\\\"btn btn-default\\\" (click)=\\\"clearState()\\\">Close</button>\\n            </div>\\n          </div>\\n        </div>\\n      </td>\\n    </tr>\\n\\n  </tbody>\\n\\n</table>\\n\\n\\n<!-- Note test -->\\n\\n<h1>Notes</h1>\\n\\n<!-- Note test 1 -->\\n<!-- <div *ngFor=\\\"let note of notes | async\\\">\\n    <h2>{{ note | json }}</h2>\\n</div> -->\\n\\n\\n<!-- Note test 2 -->\\n<h2>{{ note | async | json }}</h2>\\n<input [(ngModel)]=\\\"newContent\\\">\\n<button (click)=\\\"updateContent()\\\">UpdateContentInFireStoreDb</button>\\n\\n\\n\\n\\n<!-- <script src=\\\"https://www.gstatic.com/firebasejs/4.8.1/firebase.js\\\"></script>\\n<script>\\n  // Initialize Firebase\\n  var config = {\\n    apiKey: \\\"AIzaSyDIvNPR-vyRixAeb7izxQ9Wi8ukQBC9WWo\\\",\\n    authDomain: \\\"osmofirestore.firebaseapp.com\\\",\\n    databaseURL: \\\"https://osmofirestore.firebaseio.com\\\",\\n    projectId: \\\"osmofirestore\\\",\\n    storageBucket: \\\"osmofirestore.appspot.com\\\",\\n    messagingSenderId: \\\"38598776836\\\"\\n  };\\n  firebase.initializeApp(config);\\n</script> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef, trigger, transition, style, animate, state } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport 'firebase/storage';\nimport * as firebase from 'firebase';\n\nimport 'rxjs/add/operator/map';  // ???\n\nclass User {\n  constructor(public name: string, public email_id: string, public contact_number: number, public image?: string, public id?: string) {\n    // image and id are optional properties\n  }\n}\n\n// Note test\ninterface Note {\n  content: string;\n  hearts: number;\n  idNote?: any; // optional property\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  title = 'app';\n\n  UsersCollection: AngularFirestoreCollection<User>;\n  user: Observable<User[]>;\n  UsersDoc: AngularFirestoreDocument<User>;\n  addUser: User;\n  editState = false;\n  // editState: boolean = false;\n  itemToUpdate: User;\n\n  // Note test 1\n  notesCollection: AngularFirestoreCollection<Note>;\n  notes: Observable<Note[]>;\n  // Note test 2\n  noteDoc: AngularFirestoreDocument<Note>;\n  note: Observable<Note>;\n\n  newContent: string;\n\n  constructor(private afs: AngularFirestore) {\n    this.addUser = new User('', '', null, null, null);\n    }\n\n\n  ngOnInit() {\n    // 'users' below is the reference to UsersCollection\n    this.UsersCollection = this.afs.collection('users', ref => ref.orderBy('name', 'asc'));\n    // this.UsersCollection = this.afs.collection('users', ref => { return ref.where('name', '==', 'n3'); });\n    // take snapshot of the changes in UsersCollection\n      this.user = this.UsersCollection.snapshotChanges().map(\n        changes => {\n      return changes.map(\n        a => {\n        const data = a.payload.doc.data() as User;\n        data.id = a.payload.doc.id;\n        return data;\n    });\n  });\n\n  // Search example with where function:\n  // this.UsersCollection = this.afs.collection('users', ref=> {\n  //   return ref.where('number', '>', 11).where('number', '<', 21)\n  // });\n  // this.user = this.UsersCollection.valueChanges()\n\n  // Note test 1\n  // this.notesCollection = this.afs.collection('notes');  // reference\n  // this.notesCollection = this.afs.collection('notes', ref => {\n  //   return ref.orderBy('content');\n  // });  // reference\n  // this.notes = this.notesCollection.valueChanges();  // observable of notes data\n\n  // Note test 2\n    this.noteDoc = this.afs.doc('/notes/eqsrRUoY91SPv4iY2fey');\n    this.note = this.noteDoc.valueChanges();\n\n\n}\n\ninsert() {\n  this.UsersCollection.add(\n    { name: this.addUser.name, email_id: this.addUser.email_id, contact_number: this.addUser.contact_number,\n      image: this.addUser.image, id: this.addUser.id });\n  // this.addUser = new User('', '', null, null, null);\n}\n\ndelete(item: User) {\n this.UsersDoc = this.afs.doc(`users/${item.id}`);\n this.UsersDoc.delete();\n}\n\nedit(item: User) {\n this.editState = true;\n this.itemToUpdate = new User(item.name, item.email_id, item.contact_number, item.image, item.id);\n }\n\nupdate() {\n this.UsersDoc = this.afs.doc(`users/${this.itemToUpdate.id}`);\n this.UsersDoc.update({ name: this.itemToUpdate.name, email_id: this.itemToUpdate.email_id,\n  contact_number: this.itemToUpdate.contact_number, image: this.itemToUpdate.image, id: this.itemToUpdate.id });\n}\n\nclearState() {\n this.editState = false;\n this.itemToUpdate = null;\n }\n\n\n // Note test 2\n updateContent() {\n   this.noteDoc.update({content: this.newContent});\n }\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { environment } from '../environments/environment';\nexport const firebaseConfig = environment.firebaseConfig;\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseAuth } from '@firebase/auth-types';\nimport { FirebaseDatabase } from '@firebase/database-types';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseStorage } from '@firebase/storage-types';\nimport { FirebaseFirestore } from '@firebase/firestore-types';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFirestoreModule\n    // AngularFirestoreModule.enablePersistence()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/app/app.module.ts","export const environment = {\n  production: true,\n    firebaseConfig : {\n    apiKey: \"AIzaSyDIvNPR-vyRixAeb7izxQ9Wi8ukQBC9WWo\",\n    authDomain: \"osmofirestore.firebaseapp.com\",\n    databaseURL: \"https://osmofirestore.firebaseio.com\",\n    projectId:\"osmofirestore\",\n    storageBucket: \"osmofirestore.appspot.com\",\n    messagingSenderId: \"38598776836\"\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/osmo/SOFTA-TEST/angular-firestore-crud/src/main.ts"],"sourceRoot":"webpack:///"}